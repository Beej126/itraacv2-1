<local:ucBase x:Class="iTRAACv2.SettingsPage"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
              xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
              xmlns:local="clr-namespace:iTRAACv2"
              xmlns:global="clr-namespace:;assembly="
              xmlns:conv="clr-namespace:WPFValueConverters"
              xmlns:config="clr-namespace:System.Configuration;assembly=System.Configuration"
              xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
              xmlns:Printing="clr-namespace:System.Drawing.Printing;assembly=System.Drawing"
>
  
  <UserControl.Resources>
 
    <Style TargetType="GroupBox" BasedOn="{StaticResource {x:Type GroupBox}}">
      <Setter Property="Margin" Value="10,5,10,0" />
      <Setter Property="Padding" Value="2" />
    </Style>

    <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type RadioButton}}">
      <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

  </UserControl.Resources>

  <DockPanel>

    <WrapPanel Orientation="Vertical" DataContext="{Binding Source={x:Static local:SettingsModel.Local}}" >
  
      <GroupBox Header="Dot Matrix Printer Assignments">
        <WrapPanel Orientation="Vertical" >

          <StackPanel Orientation="Horizontal" >
            <Label Content="NFx:" />
            <ComboBox ItemsSource="{x:Static Printing:PrinterSettings.InstalledPrinters}"
                      SelectedValue="{Binding Mode=TwoWay, Path=[POPrinter]}" />
            <Button Content="Print Test Page" Margin="20,0,0,0" Click="btnTestPrint_Click" Tag="OrderForm" Style="{StaticResource PrettyFlatButton}">
              <Button.ToolTip>
                <TextBlock>
                    When printing to FILE: for testing, under Vista and later,<LineBreak />
                    make sure 'Interactive Services Detection' Service has been started<LineBreak />
                    (typically set to Manual and can take a while to spin up).
                </TextBlock>
              </Button.ToolTip>
            </Button>
            <Button Content="Reset Settings" Margin="10,0,0,0" Click="btnTestPrint_Click" Tag="!OrderForm" Style="{StaticResource PrettyFlatButton}" />
          </StackPanel>

          <StackPanel Orientation="Horizontal">
            <Label Content="Abw:" />
            <ComboBox ItemsSource="{x:Static Printing:PrinterSettings.InstalledPrinters}"
                      SelectedValue="{Binding Mode=TwoWay, Path=[AbwPrinter]}" />
            <Button Content="Print Test Page" Margin="20,0,0,0" Click="btnTestPrint_Click" Tag="Abw" Style="{StaticResource PrettyFlatButton}" />
            <Button Content="Reset Settings" Margin="10,0,0,0" Click="btnTestPrint_Click" Tag="!Abw" Style="{StaticResource PrettyFlatButton}" />
          </StackPanel>

        </WrapPanel>
      </GroupBox>
    
      <GroupBox Header="Signature Block">
        <WrapPanel Orientation="Vertical">
          <StackPanel Orientation="Horizontal" Margin="0,0,0,3">
            <RadioButton GroupName="rdoSigBlock" Name="rdoOfficeSig" Content="Office Wide:"
                         IsChecked="{Binding Mode=TwoWay, Path=[SigBlockType], Converter={conv:StringsEqualToBool}, ConverterParameter='Office', UpdateSourceTrigger=PropertyChanged}" />
            <TextBox Width="175" IsEnabled="{Binding ElementName=rdoOfficeSig, Path=IsChecked}" Margin="3,0,0,0"
                     Text="{Binding Mode=TwoWay, Path=[OfficeSigBlock], UpdateSourceTrigger=LostFocus}" />
          </StackPanel>
            <RadioButton GroupName="rdoSigBlock" Name="rdoUserSig" Content="Per User" Margin="0,0,0,3"
                         IsChecked="{Binding Mode=TwoWay, Path=[SigBlockType], Converter={conv:StringsEqualToBool}, ConverterParameter='User', UpdateSourceTrigger=PropertyChanged}" />
        </WrapPanel>
      </GroupBox>

      <GroupBox DataContext="{x:Static local:TaxOfficeModel.Current}" Style="{x:Null}" Margin="10,5">
        
        <GroupBox.Header>
          <TextBlock Text="{Binding Mode=OneTime, Path=Fields[Office], StringFormat='{}{0} Office Info'}" FontSize="12pt" />
        </GroupBox.Header>
        
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition  />
            <ColumnDefinition />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
          </Grid.RowDefinitions>
          
          <Grid.Resources>
            <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
              <Setter Property="HorizontalAlignment" Value="Right" />
            </Style>
          </Grid.Resources>

          <Label Grid.Row="1" Content="POC:" />
          <Label Grid.Row="2" Content="Office Phone:" />
          <Label Grid.Row="3" Content="Hours:" />
          <Label Grid.Row="4" Content="Address Line 1:" />
          <Label Grid.Row="5" Content="Line 2:" />
          <Label Grid.Row="6" Content="Line 3:" />
          <Label Grid.Row="7" Content="Line 4:" />

          <WrapPanel Grid.Column="1" Grid.Row="1"  Name="cbxPOC" HorizontalAlignment="Left" VerticalAlignment="Center">
            <ComboBox ItemsSource="{Binding Mode=OneTime, Path=ActiveUsers}"
                      DisplayMemberPath="UserNameId" SelectedValuePath="RowGUID"
                      SelectedValue="{Binding Mode=TwoWay, Path=Fields[POC_UserGUID]}" />

            <Button Name="btnAddAgent" Grid.Column="1" Content="Add Agent" Padding="3,1,3,2" Margin="5,0,0,0"
                    Click="btnAddAgent_Click" ToolTip="Requires admin privileges"
                    IsEnabled="{Binding Mode=OneWay, Source={x:Static local:UserModel.Current}, Path=Access.IsAdmin}" />

            <Popup Name="popAddAgent" PlacementTarget="{Binding ElementName=btnAddAgent}" Placement="Top" StaysOpen="False" AllowsTransparency="True">
              <Border BorderThickness="1" BorderBrush="DarkGray" Background="{StaticResource PopUpBackgroundBrush}" Padding="5" CornerRadius="5" >
                <DockPanel>
                  <Grid DockPanel.Dock="Top">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition />
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition />
                      <RowDefinition Height="7" />
                      <RowDefinition />
                    </Grid.RowDefinitions>

                    <RadioButton Name="rdoAddExistingAgent" Content="Existing: " GroupName="RadioGroupAddAgent" IsChecked="True" />
                    <ListBox Name="lbxAddAgentExistingUsers" MaxHeight="100" Grid.Column="1" GotFocus="popAddAgent_GotFocus" 
                              ItemsSource="{Binding Mode=OneWay, Path=AllUsersExceptLocal}"
                              DisplayMemberPath="UserName" SelectedValuePath="UserGUID" />

                    <RadioButton Name="rdoAddNewAgent" Content="New: " GroupName="RadioGroupAddAgent" Grid.Row="2"/>
                    <WrapPanel Grid.Column="1" Grid.Row="2">
                      <global:ucTextBoxWatermarked x:Name="AddAgent_FirstName" Watermark="First Name" GotFocus="popAddAgent_GotFocus" />
                      <global:ucTextBoxWatermarked x:Name="AddAgent_LastName"  Watermark="Last Name" GotFocus="popAddAgent_GotFocus" />
                      <global:ucTextBoxWatermarked x:Name="AddAgent_DSN" Watermark="DSN" GotFocus="popAddAgent_GotFocus" />
                      <global:ucTextBoxWatermarked x:Name="AddAgent_Email" Watermark="EMail" GotFocus="popAddAgent_GotFocus" />
                    </WrapPanel>

                  </Grid>

                  <StackPanel Margin="5" HorizontalAlignment="Center" Orientation="Horizontal">
                    <Button Margin="0,0,2,0" Content="  OK  " IsDefault="True" Click="btnAddAgentOK_Click" />
                    <Button Margin="2,0,0,0" Content="Cancel" IsCancel="True" Click="btnAddAgentCancel_Click" />
                  </StackPanel>

                </DockPanel>
              </Border>
            </Popup>
          </WrapPanel>

          <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding Mode=TwoWay, Path=Fields[Phone], UpdateSourceTrigger=PropertyChanged}" MaxLength="20" />
          <TextBox Grid.Column="1" Grid.Row="3" Text="{Binding Mode=TwoWay, Path=Fields[OfficeHours], UpdateSourceTrigger=PropertyChanged}" MaxLength="20" />
          <TextBox Grid.Column="1" Grid.Row="4" Text="{Binding Mode=TwoWay, Path=Fields[AgencyLine1], UpdateSourceTrigger=PropertyChanged}" MaxLength="100"
                   ToolTip="Editing Office Name &amp; Address requires Admin Access"
                   IsReadOnly="{Binding Mode=OneWay, Source={x:Static local:UserModel.Current}, Path=Access.IsAdmin, Converter={conv:InverseBooleanConverter}}" />
          <TextBox Grid.Column="1" Grid.Row="5" Text="{Binding Mode=TwoWay, Path=Fields[AgencyLine2], UpdateSourceTrigger=PropertyChanged}" MaxLength="100"
                   ToolTip="Editing Office Name &amp; Address requires Admin Access"
                   IsReadOnly="{Binding Mode=OneWay, Source={x:Static local:UserModel.Current}, Path=Access.IsAdmin, Converter={conv:InverseBooleanConverter}}" />
          <TextBox Grid.Column="1" Grid.Row="6" Text="{Binding Mode=TwoWay, Path=Fields[AgencyLine3], UpdateSourceTrigger=PropertyChanged}" MaxLength="100"
                   ToolTip="Editing Office Name &amp; Address requires Admin Access"
                   IsReadOnly="{Binding Mode=OneWay, Source={x:Static local:UserModel.Current}, Path=Access.IsAdmin, Converter={conv:InverseBooleanConverter}}" />
          <TextBox Grid.Column="1" Grid.Row="7" Text="{Binding Mode=TwoWay, Path=Fields[AgencyLine4], UpdateSourceTrigger=PropertyChanged}" MaxLength="100"
                   ToolTip="Editing Office Name &amp; Address requires Admin Access"
                   IsReadOnly="{Binding Mode=OneWay, Source={x:Static local:UserModel.Current}, Path=Access.IsAdmin, Converter={conv:InverseBooleanConverter}}" />
        </Grid>
        
      </GroupBox>
      
    </WrapPanel>

    <GroupBox DockPanel.Dock="Right" Style="{x:Null}" Margin="5" Padding="2">
      <GroupBox.Header>
        <WrapPanel>
          <TextBlock Text="VAT Offices" FontSize="12pt" />
          <TextBlock Text="(select row to see Agents)" Background="Yellow" VerticalAlignment="Center" Margin="5,0" />
        </WrapPanel>
      </GroupBox.Header>
      <DataGrid Name="gridTaxOffices" IsReadOnly="True" ItemsSource="{Binding Source={x:Static local:TaxOfficeModel.AllOffices}}"
                RowDetailsVisibilityChanged="gridTaxOffices_RowDetailsVisibilityChanged"> <!-- nugget: nested DataGrid -->
        <DataGrid.RowDetailsTemplate>
          <DataTemplate>
            <DataGrid Name="gridUsers" MaxHeight="118" HorizontalAlignment="Left" Margin="1" VerticalScrollBarVisibility="Auto"
                      CanUserAddRows="False" CanUserDeleteRows="False" CanUserResizeRows="False" >
              <DataGrid.IsReadOnly> <!-- Bind IsReadOnly via *XAML* to TaxOfficeId so that it get value row by row and to User.Current.Access.IsAdmin so the display refreshes if we do a runtime AdminOverride switcheroo -->
                <MultiBinding Converter="{local:UserGridIsReadOnlyMulti}" >
                  <Binding Mode="OneWay" Path="TaxOfficeId" />
                  <Binding Mode="OneWay" Source="{x:Static local:UserModel.Current}" Path="Access.IsAdmin" />
                </MultiBinding>
              </DataGrid.IsReadOnly>
              <DataGrid.ToolTip> <!-- nugget: ToolTip databinding, there is no DataContext so you have to specifically assign it via Relative source RelativeSource Self + PlacementTarget -->
                <ToolTip Content="Must have admin rights to edit another office's agents"
                                   DataContext="{Binding Mode=OneWay, RelativeSource={RelativeSource Self}, Path=PlacementTarget}"
                                   Visibility="{Binding Mode=OneWay, Path=IsReadOnly, Converter={conv:BooleanToVisibilityConverter}}" />
              </DataGrid.ToolTip>

              <DataGrid.Columns>
                <DataGridTemplateColumn Header="Active" SortMemberPath="Active">
                  <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                      <CheckBox IsChecked="{Binding Mode=TwoWay, Path=[Active], UpdateSourceTrigger=PropertyChanged}"
                                IsEnabled="{Binding Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}, Path=IsReadOnly, Converter={conv:InverseBooleanConverter}}" >
                      </CheckBox>
                    </DataTemplate>
                  </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
              </DataGrid.Columns>
            </DataGrid>
          </DataTemplate>
        </DataGrid.RowDetailsTemplate>
      </DataGrid>
      
    </GroupBox>

  </DockPanel>

</local:ucBase>
