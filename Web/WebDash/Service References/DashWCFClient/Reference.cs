//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace WebDash.DashWCFClient {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DashWCFClient.IDashWCF")]
    public interface IDashWCF {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDashWCF/SimpleTest", ReplyAction="http://tempuri.org/IDashWCF/SimpleTestResponse")]
        System.IAsyncResult BeginSimpleTest(System.AsyncCallback callback, object asyncState);
        
        string EndSimpleTest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDashWCF/ProcCall", ReplyAction="http://tempuri.org/IDashWCF/ProcCallResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<System.Collections.Generic.Dictionary<string, object>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
        System.IAsyncResult BeginProcCall(string ProcName, System.Collections.ObjectModel.ObservableCollection<object> parms, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<System.Collections.Generic.Dictionary<string, object>> EndProcCall(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDashWCFChannel : WebDash.DashWCFClient.IDashWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SimpleTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SimpleTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProcCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ProcCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<System.Collections.Generic.Dictionary<string, object>> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<System.Collections.Generic.Dictionary<string, object>>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DashWCFClient : System.ServiceModel.ClientBase<WebDash.DashWCFClient.IDashWCF>, WebDash.DashWCFClient.IDashWCF {
        
        private BeginOperationDelegate onBeginSimpleTestDelegate;
        
        private EndOperationDelegate onEndSimpleTestDelegate;
        
        private System.Threading.SendOrPostCallback onSimpleTestCompletedDelegate;
        
        private BeginOperationDelegate onBeginProcCallDelegate;
        
        private EndOperationDelegate onEndProcCallDelegate;
        
        private System.Threading.SendOrPostCallback onProcCallCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public DashWCFClient() {
        }
        
        public DashWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DashWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DashWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DashWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<SimpleTestCompletedEventArgs> SimpleTestCompleted;
        
        public event System.EventHandler<ProcCallCompletedEventArgs> ProcCallCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebDash.DashWCFClient.IDashWCF.BeginSimpleTest(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSimpleTest(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WebDash.DashWCFClient.IDashWCF.EndSimpleTest(System.IAsyncResult result) {
            return base.Channel.EndSimpleTest(result);
        }
        
        private System.IAsyncResult OnBeginSimpleTest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((WebDash.DashWCFClient.IDashWCF)(this)).BeginSimpleTest(callback, asyncState);
        }
        
        private object[] OnEndSimpleTest(System.IAsyncResult result) {
            string retVal = ((WebDash.DashWCFClient.IDashWCF)(this)).EndSimpleTest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSimpleTestCompleted(object state) {
            if ((this.SimpleTestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SimpleTestCompleted(this, new SimpleTestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SimpleTestAsync() {
            this.SimpleTestAsync(null);
        }
        
        public void SimpleTestAsync(object userState) {
            if ((this.onBeginSimpleTestDelegate == null)) {
                this.onBeginSimpleTestDelegate = new BeginOperationDelegate(this.OnBeginSimpleTest);
            }
            if ((this.onEndSimpleTestDelegate == null)) {
                this.onEndSimpleTestDelegate = new EndOperationDelegate(this.OnEndSimpleTest);
            }
            if ((this.onSimpleTestCompletedDelegate == null)) {
                this.onSimpleTestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSimpleTestCompleted);
            }
            base.InvokeAsync(this.onBeginSimpleTestDelegate, null, this.onEndSimpleTestDelegate, this.onSimpleTestCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebDash.DashWCFClient.IDashWCF.BeginProcCall(string ProcName, System.Collections.ObjectModel.ObservableCollection<object> parms, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginProcCall(ProcName, parms, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<System.Collections.Generic.Dictionary<string, object>> WebDash.DashWCFClient.IDashWCF.EndProcCall(System.IAsyncResult result) {
            return base.Channel.EndProcCall(result);
        }
        
        private System.IAsyncResult OnBeginProcCall(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ProcName = ((string)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<object> parms = ((System.Collections.ObjectModel.ObservableCollection<object>)(inValues[1]));
            return ((WebDash.DashWCFClient.IDashWCF)(this)).BeginProcCall(ProcName, parms, callback, asyncState);
        }
        
        private object[] OnEndProcCall(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<System.Collections.Generic.Dictionary<string, object>> retVal = ((WebDash.DashWCFClient.IDashWCF)(this)).EndProcCall(result);
            return new object[] {
                    retVal};
        }
        
        private void OnProcCallCompleted(object state) {
            if ((this.ProcCallCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProcCallCompleted(this, new ProcCallCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ProcCallAsync(string ProcName, System.Collections.ObjectModel.ObservableCollection<object> parms) {
            this.ProcCallAsync(ProcName, parms, null);
        }
        
        public void ProcCallAsync(string ProcName, System.Collections.ObjectModel.ObservableCollection<object> parms, object userState) {
            if ((this.onBeginProcCallDelegate == null)) {
                this.onBeginProcCallDelegate = new BeginOperationDelegate(this.OnBeginProcCall);
            }
            if ((this.onEndProcCallDelegate == null)) {
                this.onEndProcCallDelegate = new EndOperationDelegate(this.OnEndProcCall);
            }
            if ((this.onProcCallCompletedDelegate == null)) {
                this.onProcCallCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProcCallCompleted);
            }
            base.InvokeAsync(this.onBeginProcCallDelegate, new object[] {
                        ProcName,
                        parms}, this.onEndProcCallDelegate, this.onProcCallCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override WebDash.DashWCFClient.IDashWCF CreateChannel() {
            return new DashWCFClientChannel(this);
        }
        
        private class DashWCFClientChannel : ChannelBase<WebDash.DashWCFClient.IDashWCF>, WebDash.DashWCFClient.IDashWCF {
            
            public DashWCFClientChannel(System.ServiceModel.ClientBase<WebDash.DashWCFClient.IDashWCF> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSimpleTest(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("SimpleTest", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSimpleTest(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SimpleTest", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginProcCall(string ProcName, System.Collections.ObjectModel.ObservableCollection<object> parms, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = ProcName;
                _args[1] = parms;
                System.IAsyncResult _result = base.BeginInvoke("ProcCall", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<System.Collections.Generic.Dictionary<string, object>> EndProcCall(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<System.Collections.Generic.Dictionary<string, object>> _result = ((System.Collections.ObjectModel.ObservableCollection<System.Collections.Generic.Dictionary<string, object>>)(base.EndInvoke("ProcCall", _args, result)));
                return _result;
            }
        }
    }
}
